make all --print-data-base --no-builtin-variables --no-builtin-rules --question
# GNU Make 3.81
# Copyright (C) 2006  Free Software Foundation, Inc.
# This is free software; see the source for copying conditions.
# There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

# This program built for i386-apple-darwin11.3.0
 
make: *** No rule to make target `all'.  Stop.
 

# Make data base, printed on Fri May 21 17:21:08 2021

# Variables

 
# automatic
<D = $(patsubst %/,%,$(dir $<))
# automatic
?F = $(notdir $?)
# makefile (from `Makefile', line 33)
REVISION := 4072205709
# makefile (from `Makefile', line 72)
TGZ_TARGET := bridge_darwin_4072205709.tgz
# environment
GREP_COLOR = 37;45
# environment
VSCODE_LOG_NATIVE = false
# automatic
?D = $(patsubst %/,%,$(dir $?))
# automatic
@D = $(patsubst %/,%,$(dir $@))
# makefile (from `Makefile', line 65)
EXE := proton-bridge.app
# automatic
@F = $(notdir $@)
# makefile
CURDIR := /Users/alexsteffen/Documents/GitHub/proton-bridge
# makefile
SHELL = /bin/sh
# environment
VSCODE_NLS_CONFIG = {"locale":"en-us","availableLanguages":{},"_languagePackSupport":true}
# environment
_ = /usr/bin/make
# makefile (from `Makefile', line 16)
SRC_ICO := logo.ico
# makefile (from `Makefile', line 1)
MAKEFILE_LIST :=  Makefile
# makefile (from `Makefile', line 155)
APP_VERSION_COMMA := 1,8,1
# environment
VSCODE_NODE_CACHED_DATA_DIR = /Users/alexsteffen/Library/Application Support/Code - Insiders/CachedData/82767cc1d7bf8cdea0f2897276d5d15aee91f3d9
# makefile (from `Makefile', line 1)
GO111MODULE = on
# makefile (from `Makefile', line 21)
CONFIGNAME := bridge
# environment
LESS_TERMCAP_se = [0m
# environment
VSCODE_VERBOSE_LOGGING = true
# makefile (from `Makefile', line 310)
RUN_FLAGS_IE = -m -l=${LOG}
# makefile (from `Makefile', line 50)
BUILD_FLAGS_GUI := -tags=' build_qt' -ldflags '-X github.com/ProtonMail/proton-bridge/internal/constants.Version=1.8.1+git -X github.com/ProtonMail/proton-bridge/internal/constants.Revision=4072205709 -X github.com/ProtonMail/proton-bridge/internal/constants.BuildTime=2021-05-21T17:21:08-0700'
# environment
__CFBundleIdentifier = com.microsoft.VSCodeInsiders
# environment
INFOPATH = /opt/homebrew/share/info:/opt/homebrew/share/info:
# environment
VSCODE_IPC_HOOK_EXTHOST = /var/folders/tp/31847dv93f39qwtyw6bl0s3h0000gn/T/vscode-ipc-4248e980-6075-4f66-9b75-8e4f55c4fb7b.sock
# environment
VSCODE_CWD = /
# environment
LESS_TERMCAP_me = [0m
# makefile (from `Makefile', line 15)
APP_VERSION := 1.8.1+git
# environment
LESS_TERMCAP_mb = [01;31m
# environment
LSCOLORS = exfxcxdxbxGxDxabagacad
# makefile (from `Makefile', line 22)
WINDRES_DEFINE := BUILD_BRIDGE
# environment
VSCODE_LOG_STACK = true
# environment
ELECTRON_RUN_AS_NODE = 1
# makefile (from `Makefile', line 39)
GO_LDFLAGS := -X github.com/ProtonMail/proton-bridge/internal/constants.Version=1.8.1+git -X github.com/ProtonMail/proton-bridge/internal/constants.Revision=4072205709 -X github.com/ProtonMail/proton-bridge/internal/constants.BuildTime=2021-05-21T17:21:08-0700
# default
.FEATURES := target-specific order-only second-expansion else-if archives jobserver check-symlink
# environment
LS_COLORS = di=34:ln=35:so=32:pi=33:ex=31:bd=36;01:cd=33;01:su=31;40;07:sg=36;40;07:tw=32;40;07:ow=33;40;07:
# makefile (from `Makefile', line 19)
TGT_ICNS := Bridge.icns
# environment
SSH_AUTH_SOCK = /private/tmp/com.apple.launchd.o65k73g25W/Listeners
# automatic
%F = $(notdir $%)
# environment
DISPLAY = :0
# environment
VISUAL = nano
# makefile (from `Makefile', line 309)
RUN_FLAGS = -m -l=${LOG} --log-imap=${LOG_IMAP} ${LOG_SMTP}
# environment
VSCODE_PIPE_LOGGING = true
# environment
PWD = /Users/alexsteffen/Documents/GitHub/proton-bridge
# environment
HOMEBREW_CELLAR = /opt/homebrew/Cellar
# environment
ORIGINAL_XDG_CURRENT_DESKTOP = undefined
# environment
LESS_TERMCAP_ue = [0m
# environment
MANPATH = /opt/homebrew/share/man:/usr/share/man:/usr/local/share/man:/opt/X11/share/man:/opt/homebrew/share/man:
# environment
VSCODE_AMD_ENTRYPOINT = vs/workbench/services/extensions/node/extensionHostProcess
# environment
HOME = /Users/alexsteffen
# makefile (from `Makefile', line 67)
EXE_BINARY_DARWIN := /Contents/MacOS/proton-bridge
# default
MAKEFILEPATH := /Applications/Xcode.app/Contents/Developer/Makefiles
# environment
LOGNAME = alexsteffen
# makefile (from `Makefile', line 54)
ICO_FILES := 
# environment
APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL = true
# makefile (from `Makefile', line 192)
LINTVER := "v1.39.0"
# automatic
+F = $(notdir $+)
# environment
]1337;RemoteHost = alexsteffen@mbp.local]1337;CurrentDir=/]1337;ShellIntegrationVersion=12;shell=zshUSER=alexsteffen
# makefile (from `Makefile', line 69)
EXE_TARGET := cmd/Desktop-Bridge/deploy/darwin/proton-bridge.app
# environment
VSCODE_HANDLES_UNCAUGHT_ERRORS = true
# makefile (from `Makefile', line 66)
EXE_QT := proton-bridge.app
# automatic
^D = $(patsubst %/,%,$(dir $^))
# environment
LESS_TERMCAP_md = [01;31m
# makefile (from `Makefile', line 53)
DEPLOY_DIR := cmd/Desktop-Bridge/deploy
# makefile (from `Makefile', line 13)
BRIDGE_APP_VERSION = 1.8.1+git
# environment
XPC_FLAGS = 0x0
# default
MAKE = $(MAKE_COMMAND)
# default
MAKECMDGOALS := all
# environment
 
PATH = /opt/homebrew/bin:/opt/homebrew/sbin:/opt/local/bin:/opt/local/sbin:/usr/local/bin:/usr/local/sbin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/share/dotnet:/opt/X11/bin:~/.dotnet/tools:/Library/Apple/usr/bin:/Library/Frameworks/Mono.framework/Versions/Current/Commands:/opt/homebrew/bin:/opt/homebrew/sbin:/opt/local/bin:/opt/local/sbin:/Users/alexsteffen/.cargo/bin
# environment
SHLVL = 1
# environment
LOCAL_GIT_DIRECTORY = /Applications/GitHub Desktop.app/Contents/Resources/app/git
# environment
LESS_TERMCAP_so = [00;47;30m
# makefile (from `Makefile', line 49)
BUILD_FLAGS := -tags='' -ldflags '-X github.com/ProtonMail/proton-bridge/internal/constants.Version=1.8.1+git -X github.com/ProtonMail/proton-bridge/internal/constants.Revision=4072205709 -X github.com/ProtonMail/proton-bridge/internal/constants.BuildTime=2021-05-21T17:21:08-0700'
# default
MAKE_VERSION := 3.81
# environment
USER = alexsteffen
# makefile
.DEFAULT_GOAL := build
# makefile (from `Makefile', line 162)
THERECIPE_ENV := github.com/therecipe/env_darwin_amd64_513
# makefile (from `Makefile', line 44)
GO_LDFLAGS_LAUNCHER := -X github.com/ProtonMail/proton-bridge/internal/constants.Version=1.8.1+git -X github.com/ProtonMail/proton-bridge/internal/constants.Revision=4072205709 -X github.com/ProtonMail/proton-bridge/internal/constants.BuildTime=2021-05-21T17:21:08-0700 -X main.ConfigName=bridge -X main.ExeName=proton-
# makefile (from `Makefile', line 20)
EXE_NAME := proton-bridge
# environment
DBUS_LAUNCHD_SESSION_BUS_SOCKET = /private/tmp/com.apple.launchd.xedndfPcge/unix_domain_listener
# environment
LESS = -F -g -i -M -R -S -w -X -z-4
# automatic
%D = $(patsubst %/,%,$(dir $%))
# makefile (from `Makefile', line 51)
BUILD_FLAGS_LAUNCHER := -tags='' -ldflags '-X github.com/ProtonMail/proton-bridge/internal/constants.Version=1.8.1+git -X github.com/ProtonMail/proton-bridge/internal/constants.Revision=4072205709 -X github.com/ProtonMail/proton-bridge/internal/constants.BuildTime=2021-05-21T17:21:08-0700 -X main.ConfigName=bridge -X main.ExeName=proton-'
# makefile (from `Makefile', line 7)
TARGET_OS = ${GOOS}
# makefile (from `Makefile', line 307)
LOG_IMAP = client 
# default
MAKE_COMMAND := /Applications/Xcode.app/Contents/Developer/usr/bin/make
# environment
GREP_COLORS = mt=37;45
# default
.VARIABLES := 
# environment
TMPDIR = /var/folders/tp/31847dv93f39qwtyw6bl0s3h0000gn/T/
# automatic
*F = $(notdir $*)
# makefile (from `Makefile', line 5)
GOOS := darwin
# environment
VSCODE_IPC_HOOK = /Users/alexsteffen/Library/Application Support/Code - Insiders/1.57.0-insider-main.sock
# makefile (from `Makefile', line 34)
BUILD_TIME := 2021-05-21T17:21:08-0700
# makefile (from `Makefile', line 18)
SRC_SVG := logo.svg
# makefile
MAKEFLAGS = Rrqp
# makefile (from `Makefile', line 14)
IE_APP_VERSION = 1.3.3+git
# environment
MFLAGS = -Rrqp
# automatic
*D = $(patsubst %/,%,$(dir $*))
# makefile (from `Makefile', line 17)
SRC_ICNS := Bridge.icns
# environment
XPC_SERVICE_NAME = application.com.microsoft.VSCodeInsiders.6646424.6646430
# environment
LESS_TERMCAP_us = [01;32m
# environment
HOMEBREW_PREFIX = /opt/homebrew
# automatic
+D = $(patsubst %/,%,$(dir $+))
# makefile (from `Makefile', line 80)
VENDOR_TARGET = update-vendor
# environment
BROWSER = open
# environment
HOMEBREW_REPOSITORY = /opt/homebrew
# environment
__CF_USER_TEXT_ENCODING = 0x1F5:0x0:0x52
# environment
COMMAND_MODE = unix2003
# default
MAKEFILES := 
# automatic
<F = $(notdir $<)
# makefile (from `Makefile', line 154)
WINDRES_YEAR := 2021
# environment
EDITOR = nano
# environment
PAGER = less
# environment
LC_ALL = C
# makefile (from `Makefile', line 173)
LINKCMD := ln -sf /Users/alexsteffen/Documents/GitHub/proton-bridge/vendor-cache/github.com/therecipe/env_darwin_amd64_513 vendor/github.com/therecipe/env_darwin_amd64_513
# automatic
^F = $(notdir $^)
# default
SUFFIXES := 
# makefile (from `Makefile', line 193)
LINTSRC := "https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh"
# makefile (from `Makefile', line 55)
DIRNAME := proton-bridge
# makefile (from `Makefile', line 138)
QT_BUILD_TARGET := build desktop
# default
.INCLUDE_DIRS = /usr/local/include
# environment
MAKELEVEL := 0
# makefile (from `Makefile', line 306)
LOG = debug
# environment
LANG = C
# makefile (from `Makefile', line 64)
DARWINAPP_CONTENTS := cmd/Desktop-Bridge/deploy/darwin/proton-bridge.app/Contents
# makefile (from `Makefile', line 6)
TARGET_CMD = Desktop-Bridge
# environment
VSCODE_PID = 15154
# makefile (from `Makefile', line 308)
LOG_SMTP = --log-smtp 
# makefile (from `Makefile', line 70)
EXE_QT_TARGET := cmd/Desktop-Bridge/deploy/darwin/proton-bridge.app
# variable set hash-table stats:
# Load=131/1024=13%, Rehash=0, Collisions=11/260=4%

# Pattern-specific Variable Values

# No pattern-specific variable values.

# Directories

# . (device 16777231, inode 8302968): 28 files, no impossibilities.
# release-notes (device 16777231, inode 8303820): No files, no impossibilities so far.

# 28 files, no impossibilities in 2 directories.

# Implicit Rules

release-notes/%.html: release-notes/%.md
#  commands to execute (from `Makefile', line 291):
	./utils/release_notes.sh $^
	

# 1 implicit rules, 0 (0.0%) terminal.

# Files

prepare-vendor:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 180):
	go install -v -tags=no_env github.com/therecipe/qt/cmd/...
	go mod vendor
	

run-qml-preview:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 328):
	$(MAKE) -C internal/frontend/qt -f Makefile.local qmlpreview
	

integration-test-bridge:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 257):
	${MAKE} -C test test-bridge
	

bridge_darwin_4072205709.tgz: cmd/Desktop-Bridge/deploy/darwin
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 113):
	rm -f $@
	cd ${DEPLOY_DIR}/${TARGET_OS} && tar czf ../../../../$@ .
	

updates: install-go-mod-outdated
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 282):
	# Uncomment the "-ci" to fail the job if something can be updated.
	go list -u -m -json all | go-mod-outdated -update -direct #-ci
	

# Not a target:
all:
#  Command-line target.
#  Implicit rule search has been done.
#  File does not exist.
#  File has not been updated.
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/0=0%

build-ie:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 86):
	TARGET_CMD=Import-Export $(MAKE) build
	

.PHONY: build build-ie build-nogui build-ie-nogui build-launcher build-launcher-ie versioner hasher prepare-vendor update-vendor update-qt-docs install-devel-tools install-linter install-go-mod-outdated install-git-hooks check-has-go add-license change-copyright-year test bench coverage mocks lint-license lint-golang lint updates doc release-notes gofiles run run-qt run-qt-cli run-nogui run-nogui-cli run-debug run-qml-preview run-ie-qml-preview run-ie run-ie-qt run-ie-qt-cli run-ie-nogui run-ie-nogui-cli clean-vendor clean-frontend-qt clean-frontend-qt-ie clean-frontend-qt-common clean generate
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
internal/frontend/share/info.rc:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

clean-frontend-qt-common:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
 
#  commands to execute (from `Makefile', line 344):
	$(MAKE) -C internal/frontend/qt-common -f Makefile.local clean
	

# Not a target:
release-notes/ie_stable.html:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

resource.syso: internal/frontend/share/info.rc internal/frontend/share/icons/logo.ico .FORCE
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 157):
	rm -f ./*.syso
	windres --target=pe-x86-64 -I ./internal/frontend/share/icons/ -D ${WINDRES_DEFINE} -D ICO_FILE=${SRC_ICO} -D EXE_NAME="${EXE_NAME}" -D FILE_VERSION="${APP_VERSION}" -D ORIGINAL_FILE_NAME="${EXE}" -D PRODUCT_VERSION="${APP_VERSION}" -D FILE_VERSION_COMMA=${APP_VERSION_COMMA} -D YEAR=${WINDRES_YEAR} -o $@ $<
	

internal/bridge/credits.go: utils/credits.sh go.mod
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 298):
	cd ./utils/ && ./credits.sh bridge
	

lint-license:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 271):
	./utils/missing_license.sh check
	

cmd/Desktop-Bridge/deploy/linux: cmd/Desktop-Bridge/deploy/darwin/proton-bridge.app
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 117):
	cp -pf ./internal/frontend/share/icons/${SRC_SVG} ${DEPLOY_DIR}/linux/logo.svg
	cp -pf ./LICENSE ${DEPLOY_DIR}/linux/
	cp -pf ./Changelog.md ${DEPLOY_DIR}/linux/
	cp -pf ./dist/${EXE_NAME}.desktop ${DEPLOY_DIR}/linux/
	

# Not a target:
release-notes/ie_early.html:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

gofiles: internal/bridge/credits.go internal/importexport/credits.go
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

run-nogui: clean-vendor gofiles
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 320):
	PROTONMAIL_ENV=dev go run ${BUILD_FLAGS} cmd/${TARGET_CMD}/main.go ${RUN_FLAGS} | tee last.log
	

# Not a target:
.SUFFIXES:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
Makefile:
#  Implicit rule search has been done.
#  Last modified 2021-05-21 17:19:30
#  File has been updated.
#  Successfully updated.
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/0=0%

internal/importexport/credits.go: utils/credits.sh go.mod
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 300):
	cd ./utils/ && ./credits.sh importexport
	

run-ie-qt:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 335):
	TARGET_CMD=Import-Export RUN_FLAGS="${RUN_FLAGS_IE}" $(MAKE) run-qt
	

change-copyright-year:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 221):
	./utils/missing_license.sh change-year
	

test: gofiles
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 224):
	@# Listing packages manually to not run Qt folder (which needs to run qtsetup first) and integration tests.
	go test -coverprofile=/tmp/coverage.out -run=${TESTRUN} \
	./internal/api/... \
	./internal/bridge/... \
	./internal/config/... \
	./internal/constants/... \
	./internal/cookies/... \
	./internal/crash/... \
	./internal/events/... \
	./internal/frontend/autoconfig/... \
	./internal/frontend/cli/... \
	./internal/imap/... \
	./internal/importexport/... \
	./internal/locations/... \
	./internal/logging/... \
	./internal/metrics/... \
	./internal/smtp/... \
	./internal/store/... \
	./internal/transfer/... \
	./internal/updater/... \
	./internal/users/... \
	./internal/versioner/... \
	./pkg/...
	

clean-vendor: clean-frontend-qt clean-frontend-qt-ie clean-frontend-qt-common
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 347):
	rm -rf ./vendor
	

build: bridge_darwin_4072205709.tgz
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

install-go-mod-outdated:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 206):
	which go-mod-outdated || go get -u github.com/psampaz/go-mod-outdated
	

install-devel-tools: check-has-go
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 198):
	go get -v github.com/golang/mock/gomock
	go get -v github.com/golang/mock/mockgen
	go get -v github.com/go-delve/delve
	

run-ie-nogui-cli:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

cmd/Desktop-Bridge/deploy/windows: cmd/Desktop-Bridge/deploy/darwin/proton-bridge.app
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 135):
	cp ./internal/frontend/share/icons/${SRC_ICO} ${DEPLOY_DIR}/windows/logo.ico
	cp LICENSE ${DEPLOY_DIR}/windows/
	

lint-golang:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 277):
	which golangci-lint || $(MAKE) install-linter
	$(info linting with GOMAXPROCS=${GOMAXPROCS})
	golangci-lint run ./...
	

versioner:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 107):
	go build ${BUILD_FLAGS} -o versioner utils/versioner/main.go
	

doc:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 286):
	godoc -http=:6060
	

run-ie:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 333):
	TARGET_CMD=Import-Export RUN_FLAGS="${RUN_FLAGS_IE}" $(MAKE) run
	

hasher:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 110):
	go build -o hasher utils/hasher/main.go
	

update-qt-docs:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 188):
	go get github.com/therecipe/qt/internal/binding/files/docs/$(QT_API)
	

generate:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 360):
	go generate ./...
	$(MAKE) add-license
	

run-qt: cmd/Desktop-Bridge/deploy/darwin/proton-bridge.app
#  Phony target (prerequisite of .PHONY).
 
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 315):
	PROTONMAIL_ENV=dev ./$< ${RUN_FLAGS} | tee last.log
	

# Not a target:
go.mod:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

add-license:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 218):
	./utils/missing_license.sh add
	

cmd/Desktop-Bridge/deploy/darwin: cmd/Desktop-Bridge/deploy/darwin/proton-bridge.app
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 123):
	if [ "${DIRNAME}" != "${EXE_NAME}" ]; then \
	mv ${EXE_TARGET}/Contents/MacOS/{${DIRNAME},${EXE_NAME}}; \
	perl -i -pe"s/>${DIRNAME}/>${EXE_NAME}/g" ${EXE_TARGET}/Contents/Info.plist; \
	fi
	cp ./internal/frontend/share/icons/${SRC_ICNS} ${DARWINAPP_CONTENTS}/Resources/${TGT_ICNS}
	cp LICENSE ${DARWINAPP_CONTENTS}/Resources/
	rm -rf "${DARWINAPP_CONTENTS}/Frameworks/QtWebEngine.framework"
	rm -rf "${DARWINAPP_CONTENTS}/Frameworks/QtWebView.framework"
	rm -rf "${DARWINAPP_CONTENTS}/Frameworks/QtWebEngineCore.framework"
	./utils/remove_non_relative_links_darwin.sh "${EXE_TARGET}${EXE_BINARY_DARWIN}"
	

run-debug:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 325):
	PROTONMAIL_ENV=dev dlv debug --build-flags "${BUILD_FLAGS}" cmd/${TARGET_CMD}/main.go -- ${RUN_FLAGS}
	

clean-frontend-qt-ie:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 342):
	$(MAKE) -C internal/frontend/qt-ie -f Makefile.local clean
	

# Not a target:
.DEFAULT:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
internal/frontend/share/icons/logo.ico:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

run-nogui-cli: clean-vendor gofiles
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 322):
	PROTONMAIL_ENV=dev go run ${BUILD_FLAGS} cmd/${TARGET_CMD}/main.go ${RUN_FLAGS} -c
	

# Not a target:
release-notes/bridge_early.html:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

build-launcher-ie:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 104):
	TARGET_CMD=Import-Export $(MAKE) build-launcher
	

# Not a target:
utils/credits.sh:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

run-ie-qt-cli:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

run: run-nogui-cli
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

clean: clean-vendor
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 350):
	rm -rf vendor-cache
	rm -rf cmd/Desktop-Bridge/deploy
	rm -rf cmd/Import-Export/deploy
	rm -f build last.log mem.pprof main.go
	rm -f resource.syso
	rm -f release-notes/bridge.html
	rm -f release-notes/import-export.html
	

coverage: test
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 254):
	go tool cover -html=/tmp/coverage.out -o=coverage.html
	

vendor-cache/github.com/therecipe/env_darwin_amd64_513:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 167):
	git clone https://${THERECIPE_ENV}.git vendor-cache/${THERECIPE_ENV}
	if [ "${TARGET_OS}" == "darwin" ]; then cp -f "./utils/QTBUG-88600/libqcocoa.dylib" "./vendor-cache/${THERECIPE_ENV}/5.13.0/clang_64/plugins/platforms/"; fi;
	

build-ie-nogui:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 92):
	TARGET_CMD=Import-Export $(MAKE) build-nogui
	

install-linter: check-has-go
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 203):
	curl -sfL $(LINTSRC) | sh -s -- -b $(shell go env GOPATH)/bin $(LINTVER)
	

check-has-go:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 215):
	@which go || (echo "Install Go-lang!" && exit 1)
	

release-notes: release-notes/bridge_stable.html release-notes/bridge_early.html release-notes/ie_stable.html release-notes/ie_early.html
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

bench:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 249):
	go test -run '^$$' -bench=. -memprofile bench_mem.pprof -cpuprofile bench_cpu.pprof ./internal/store
	go tool pprof -png -output bench_mem.png bench_mem.pprof
	go tool pprof -png -output bench_cpu.png bench_cpu.pprof
	

run-ie-qml-preview:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 330):
	$(MAKE) -C internal/frontend/qt-ie -f Makefile.local qmlpreview
	

clean-frontend-qt:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 340):
	$(MAKE) -C internal/frontend/qt -f Makefile.local clean
	

mocks:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 260):
	mockgen --package mocks github.com/ProtonMail/proton-bridge/internal/users Locator,PanicHandler,CredentialsStorer,StoreMaker > internal/users/mocks/mocks.go
	mockgen --package mocks github.com/ProtonMail/proton-bridge/pkg/listener Listener > internal/users/mocks/listener_mocks.go
	mockgen --package mocks github.com/ProtonMail/proton-bridge/internal/transfer PanicHandler,IMAPClientProvider > internal/transfer/mocks/mocks.go
	mockgen --package mocks github.com/ProtonMail/proton-bridge/internal/store PanicHandler,BridgeUser,ChangeNotifier > internal/store/mocks/mocks.go
	mockgen --package mocks github.com/ProtonMail/proton-bridge/pkg/listener Listener > internal/store/mocks/utils_mocks.go
	mockgen --package mocks github.com/ProtonMail/proton-bridge/pkg/pmapi Client,Manager > pkg/pmapi/mocks/mocks.go
	mockgen --package mocks github.com/ProtonMail/proton-bridge/pkg/message Fetcher > pkg/message/mocks/mocks.go
	

lint: gofiles lint-golang lint-license lint-changelog
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

install-dev-dependencies: install-devel-tools install-linter install-go-mod-outdated
 
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

install-git-hooks:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 209):
	cp utils/githooks/* .git/hooks/
	chmod +x .git/hooks/*
	

build-launcher:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 99):
	${PRERESOURCECMD}
	go build ${BUILD_FLAGS_LAUNCHER} -o launcher-${EXE} ./cmd/launcher/
	${POSTRESOURCECMD}
	

# Not a target:
release-notes/bridge_stable.html:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

run-ie-nogui:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 337):
	TARGET_CMD=Import-Export RUN_FLAGS="${RUN_FLAGS_IE}" $(MAKE) run-nogui
	

run-qt-cli: cmd/Desktop-Bridge/deploy/darwin/proton-bridge.app
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 317):
	PROTONMAIL_ENV=dev ./$< ${RUN_FLAGS} -c
	

build-nogui: gofiles
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 89):
	go build ${BUILD_FLAGS} -o ${EXE_NAME} cmd/${TARGET_CMD}/main.go
	

update-vendor: vendor-cache/github.com/therecipe/env_darwin_amd64_513 prepare-vendor
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 185):
	${LINKCMD}
	

lint-changelog:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 274):
	./utils/changelog_linter.sh Changelog.md
	

cmd/Desktop-Bridge/deploy/darwin/proton-bridge.app: check-has-go gofiles update-vendor
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 146):
	rm -rf deploy ${TARGET_OS} ${DEPLOY_DIR}
	cp cmd/${TARGET_CMD}/main.go .
	qtdeploy ${BUILD_FLAGS_GUI} ${QT_BUILD_TARGET}
	mv deploy cmd/${TARGET_CMD}
	if [ "${EXE_QT_TARGET}" != "${EXE_TARGET}" ]; then mv ${EXE_QT_TARGET} ${EXE_TARGET}; fi
	rm -rf ${TARGET_OS} main.go
	

.FORCE:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# files hash-table stats:
# Load=74/1024=7%, Rehash=0, Collisions=17/187=9%
# VPATH Search Paths

# No `vpath' search paths.

# No general (`VPATH' variable) search path.

# # of strings in strcache: 1
# # of strcache buffers: 1
# strcache size: total = 4096 / max = 4096 / min = 4096 / avg = 4096
# strcache free: total = 4087 / max = 4087 / min = 4087 / avg = 4087

# Finished Make data base on Fri May 21 17:21:08 2021

 
